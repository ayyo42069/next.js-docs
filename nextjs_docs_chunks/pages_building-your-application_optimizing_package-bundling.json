[
  {
    "title": "Optimizing Bundling",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Building Your Application](/docs/pages/building-your-application)[Optimizing](/docs/pages/building-your-application/optimizing)Bundling",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Building Your Application](/docs/pages/building-your-application)[Optimizing](/docs/pages/building-your-application/optimizing)Bundling",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#untitled-section",
    "position": 0
  },
  {
    "title": "Optimizing Bundling",
    "section": "Optimizing Bundling",
    "section_id": "optimizing-bundling",
    "heading_level": 1,
    "content": "# Optimizing Bundling\n\nBundling external packages can significantly improve the performance of your application.  By default, packages imported into your application are not bundled. This can impact performance or might not work if external packages are not pre-bundled, for example, if imported from a monorepo or `node_modules`. This page will guide you through how to analyze and configure package bundling.",
    "preview": "Bundling external packages can significantly improve the performance of your application. By default, packages imported into your application are not bundled. This can impact performance or might not work if external packages are not pre-bundled, for example, if imported from a monorepo or `node_mo",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#optimizing-bundling",
    "position": 1
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Analyzing JavaScript bundles](#analyzing-javascript-bundles)",
    "section_id": "analyzing-javascript-bundles-analyzing-javascript-bundles",
    "heading_level": 2,
    "content": "## [Analyzing JavaScript bundles](#analyzing-javascript-bundles)\n\n[`@next/bundle-analyzer`](https://www.npmjs.com/package/@next/bundle-analyzer) is a plugin for Next.js that helps you manage the size of your application bundles. It generates a visual report of the size of each package and their dependencies. You can use the information to remove large dependencies, split, or [lazy-load](/docs/app/building-your-application/optimizing/lazy-loading) your code.",
    "preview": "[`@next/bundle-analyzer`](https://www.npmjs.com/package/@next/bundle-analyzer) is a plugin for Next.js that helps you manage the size of your application bundles. It generates a visual report of the size of each package and their dependencies. You can use the information to remove large dependencies",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#analyzing-javascript-bundles-analyzing-javascript-bundles",
    "position": 2
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Installation](#installation)",
    "section_id": "installation-installation",
    "heading_level": 3,
    "content": "### [Installation](#installation)\n\nInstall the plugin by running the following command:\n\n```\nnpm i @next/bundle-analyzer",
    "preview": "Install the plugin by running the following command: ``` npm i @next/bundle-analyzer",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#installation-installation",
    "position": 3
  },
  {
    "title": "Optimizing Bundling",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nyarn add @next/bundle-analyzer",
    "preview": "yarn add @next/bundle-analyzer",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#or",
    "position": 4
  },
  {
    "title": "Optimizing Bundling",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\npnpm add @next/bundle-analyzer\n```\n\nThen, add the bundle analyzer's settings to your `next.config.js`.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {}\n \nconst withBundleAnalyzer = require('@next/bundle-analyzer')({\n  enabled: process.env.ANALYZE === 'true',\n})\n \nmodule.exports = withBundleAnalyzer(nextConfig)\n```",
    "preview": "pnpm add @next/bundle-analyzer ``` Then, add the bundle analyzer's settings to your `next.config.js`. next.config.js [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#or",
    "position": 5
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Generating a report](#generating-a-report)",
    "section_id": "generating-a-report-generating-a-report",
    "heading_level": 3,
    "content": "### [Generating a report](#generating-a-report)\n\nRun the following command to analyze your bundles:\n\n```\nANALYZE=true npm run build",
    "preview": "Run the following command to analyze your bundles: ``` ANALYZE=true npm run build",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#generating-a-report-generating-a-report",
    "position": 6
  },
  {
    "title": "Optimizing Bundling",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nANALYZE=true yarn build",
    "preview": "ANALYZE=true yarn build",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#or",
    "position": 7
  },
  {
    "title": "Optimizing Bundling",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nANALYZE=true pnpm build\n```\n\nThe report will open three new tabs in your browser, which you can inspect. Periodically evaluating your application's bundles can help you maintain application performance over time.",
    "preview": "ANALYZE=true pnpm build ``` The report will open three new tabs in your browser, which you can inspect. Periodically evaluating your application's bundles can help you maintain application performance over time.",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#or",
    "position": 8
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Optimizing package imports](#optimizing-package-imports)",
    "section_id": "optimizing-package-imports-optimizing-package-imports",
    "heading_level": 2,
    "content": "## [Optimizing package imports](#optimizing-package-imports)\n\nSome packages, such as icon libraries, can export hundreds of modules, which can cause performance issues in development and production.\n\nYou can optimize how these packages are imported by adding the [`optimizePackageImports`](/docs/app/api-reference/config/next-config-js/optimizePackageImports) option to your `next.config.js`. This option will only load the modules you *actually* use, while still giving you the convenience of writing import statements with many named exports.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    optimizePackageImports: ['icon-library'],\n  },\n}\n \nmodule.exports = nextConfig\n```\n\nNext.js also optimizes some libraries automatically, thus they do not need to be included in the optimizePackageImports list. See the [full list](https://nextjs.org/docs/app/api-reference/config/next-config-js/optimizePackageImports).",
    "preview": "Some packages, such as icon libraries, can export hundreds of modules, which can cause performance issues in development and production. You can optimize how these packages are imported by adding the [`optimizePackageImports`](/docs/app/api-reference/config/next-config-js/optimizePackageImports) op",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#optimizing-package-imports-optimizing-package-imports",
    "position": 9
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Bundling specific packages](#bundling-specific-packages)",
    "section_id": "bundling-specific-packages-bundling-specific-packages",
    "heading_level": 2,
    "content": "## [Bundling specific packages](#bundling-specific-packages)\n\nTo bundle specific packages, you can use the [`transpilePackages`](/docs/app/api-reference/config/next-config-js/transpilePackages) option in your `next.config.js`. This option is useful for bundling external packages that are not pre-bundled, for example, in a monorepo or imported from `node_modules`.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  transpilePackages: ['package-name'],\n}\n \nmodule.exports = nextConfig\n```",
    "preview": "To bundle specific packages, you can use the [`transpilePackages`](/docs/app/api-reference/config/next-config-js/transpilePackages) option in your `next.config.js`. This option is useful for bundling external packages that are not pre-bundled, for example, in a monorepo or imported from `node_module",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#bundling-specific-packages-bundling-specific-packages",
    "position": 10
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Bundling all packages](#bundling-all-packages)",
    "section_id": "bundling-all-packages-bundling-all-packages",
    "heading_level": 2,
    "content": "## [Bundling all packages](#bundling-all-packages)\n\nTo automatically bundle all packages (default behavior in the App Router), you can use the [`bundlePagesRouterDependencies`](/docs/pages/api-reference/config/next-config-js/bundlePagesRouterDependencies) option in your `next.config.js`.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  bundlePagesRouterDependencies: true,\n}\n \nmodule.exports = nextConfig\n```",
    "preview": "To automatically bundle all packages (default behavior in the App Router), you can use the [`bundlePagesRouterDependencies`](/docs/pages/api-reference/config/next-config-js/bundlePagesRouterDependencies) option in your `next.config.js`. next.config.js [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#bundling-all-packages-bundling-all-packages",
    "position": 11
  },
  {
    "title": "Optimizing Bundling",
    "section": "[Opting specific packages out of bundling](#opting-specific-packages-out-of-bundling)",
    "section_id": "opting-specific-packages-out-of-bundling-opting-specific-packages-out-of-bundling",
    "heading_level": 2,
    "content": "## [Opting specific packages out of bundling](#opting-specific-packages-out-of-bundling)\n\nIf you have the [`bundlePagesRouterDependencies`](/docs/pages/api-reference/config/next-config-js/bundlePagesRouterDependencies) option enabled, you can opt specific packages out of automatic bundling using the [`serverExternalPackages`](/docs/pages/api-reference/config/next-config-js/serverExternalPackages) option in your `next.config.js`:\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  // Automatically bundle external packages in the Pages Router:\n  bundlePagesRouterDependencies: true,\n  // Opt specific packages out of bundling for both App and Pages Router:\n  serverExternalPackages: ['package-name'],\n}\n \nmodule.exports = nextConfig\n```",
    "preview": "If you have the [`bundlePagesRouterDependencies`](/docs/pages/api-reference/config/next-config-js/bundlePagesRouterDependencies) option enabled, you can opt specific packages out of automatic bundling using the [`serverExternalPackages`](/docs/pages/api-reference/config/next-config-js/serverExternal",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#opting-specific-packages-out-of-bundling-opting-specific-packages-out-of-bundling",
    "position": 12
  },
  {
    "title": "Optimizing Bundling",
    "section": "Next Steps",
    "section_id": "next-steps",
    "heading_level": 2,
    "content": "## Next Steps\n\nLearn more about optimizing your application for production.\n\n[### Production Checklist\n\nRecommendations to ensure the best performance and user experience before taking your Next.js application to production.](/docs/pages/building-your-application/deploying/production-checklist)\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "Learn more about optimizing your application for production. [### Production Checklist Recommendations to ensure the best performance and user experience before taking your Next.js application to production.](/docs/pages/building-your-application/deploying/production-checklist) Was this helpful?",
    "url": "https://nextjs.org/docs/pages/building-your-application/optimizing/package-bundling#next-steps",
    "position": 13
  }
]