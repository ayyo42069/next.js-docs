[
  {
    "title": "serverActions",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Configuration](/docs/app/api-reference/config)[next.config.js](/docs/app/api-reference/config/next-config-js)serverActions",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Configuration](/docs/app/api-reference/config)[next.config.js](/docs/app/api-reference/config/next-config-js)serverActions",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/serverActions#untitled-section",
    "position": 0
  },
  {
    "title": "serverActions",
    "section": "serverActions",
    "section_id": "serveractions",
    "heading_level": 1,
    "content": "# serverActions\n\nOptions for configuring Server Actions behavior in your Next.js application.",
    "preview": "Options for configuring Server Actions behavior in your Next.js application.",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/serverActions#serveractions",
    "position": 1
  },
  {
    "title": "serverActions",
    "section": "[`allowedOrigins`](#allowedorigins)",
    "section_id": "allowedorigins-allowedorigins",
    "heading_level": 2,
    "content": "## [`allowedOrigins`](#allowedorigins)\n\nA list of extra safe origin domains from which Server Actions can be invoked. Next.js compares the origin of a Server Action request with the host domain, ensuring they match to prevent CSRF attacks. If not provided, only the same origin is allowed.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\n \nmodule.exports = {\n  experimental: {\n    serverActions: {\n      allowedOrigins: ['my-proxy.com', '*.my-proxy.com'],\n    },\n  },\n}\n```",
    "preview": "A list of extra safe origin domains from which Server Actions can be invoked. Next.js compares the origin of a Server Action request with the host domain, ensuring they match to prevent CSRF attacks. If not provided, only the same origin is allowed. next.config.js [Code Block]",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/serverActions#allowedorigins-allowedorigins",
    "position": 2
  },
  {
    "title": "serverActions",
    "section": "[`bodySizeLimit`](#bodysizelimit)",
    "section_id": "bodysizelimit-bodysizelimit",
    "heading_level": 2,
    "content": "## [`bodySizeLimit`](#bodysizelimit)\n\nBy default, the maximum size of the request body sent to a Server Action is 1MB, to prevent the consumption of excessive server resources in parsing large amounts of data, as well as potential DDoS attacks.\n\nHowever, you can configure this limit using the `serverActions.bodySizeLimit` option. It can take the number of bytes or any string format supported by bytes, for example `1000`, `'500kb'` or `'3mb'`.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\n \nmodule.exports = {\n  experimental: {\n    serverActions: {\n      bodySizeLimit: '2mb',\n    },\n  },\n}\n```",
    "preview": "By default, the maximum size of the request body sent to a Server Action is 1MB, to prevent the consumption of excessive server resources in parsing large amounts of data, as well as potential DDoS attacks. However, you can configure this limit using the `serverActions.bodySizeLimit` option. It can",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/serverActions#bodysizelimit-bodysizelimit",
    "position": 3
  },
  {
    "title": "serverActions",
    "section": "[Enabling Server Actions (v13)](#enabling-server-actions-v13)",
    "section_id": "enabling-server-actions-v13-enabling-server-actions-v13",
    "heading_level": 2,
    "content": "## [Enabling Server Actions (v13)](#enabling-server-actions-v13)\n\nServer Actions became a stable feature in Next.js 14, and are enabled by default. However, if you are using an earlier version of Next.js, you can enable them by setting `experimental.serverActions` to `true`.\n\nnext.config.js\n\n```\n/** @type {import('next').NextConfig} */\nconst config = {\n  experimental: {\n    serverActions: true,\n  },\n}\n \nmodule.exports = config\n```\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "Server Actions became a stable feature in Next.js 14, and are enabled by default. However, if you are using an earlier version of Next.js, you can enable them by setting `experimental.serverActions` to `true`. next.config.js [Code Block] Was this helpful? supported. Send",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/serverActions#enabling-server-actions-v13-enabling-server-actions-v13",
    "position": 4
  }
]