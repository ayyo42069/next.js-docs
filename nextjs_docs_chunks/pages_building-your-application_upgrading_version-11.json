[
  {
    "title": "Version 11",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Building Your Application](/docs/pages/building-your-application)[Upgrading](/docs/pages/building-your-application/upgrading)Version 11",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Building Your Application](/docs/pages/building-your-application)[Upgrading](/docs/pages/building-your-application/upgrading)Version 11",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#untitled-section",
    "position": 0
  },
  {
    "title": "Version 11",
    "section": "Version 11",
    "section_id": "version-11",
    "heading_level": 1,
    "content": "# Version 11\n\nTo upgrade to version 11, run the following command:\n\nTerminal\n\n```\nnpm i next@11 react@17 react-dom@17\n```\n\nTerminal\n\n```\nyarn add next@11 react@17 react-dom@17\n```\n\nTerminal\n\n```\npnpm up next@11 react@17 react-dom@17\n```\n\nTerminal\n\n```\nbun add next@11 react@17 react-dom@17\n```\n\n> **Good to know:** If you are using TypeScript, ensure you also upgrade `@types/react` and `@types/react-dom` to their corresponding versions.",
    "preview": "To upgrade to version 11, run the following command: Terminal [Code Block] Terminal [Code Block] Terminal [Code Block] Terminal [Code Block] > **Good to know:** If you are using TypeScript, ensure you also upgrade `@types/react` and `@types/react-dom` to their corresponding versions.",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#version-11",
    "position": 1
  },
  {
    "title": "Version 11",
    "section": "[Webpack 5](#webpack-5)",
    "section_id": "webpack-5-webpack-5",
    "heading_level": 3,
    "content": "### [Webpack 5](#webpack-5)\n\nWebpack 5 is now the default for all Next.js applications. If you did not have a custom webpack configuration, your application is already using webpack 5. If you do have a custom webpack configuration, you can refer to the [Next.js webpack 5 documentation](/docs/messages/webpack5) for upgrade guidance.",
    "preview": "Webpack 5 is now the default for all Next.js applications. If you did not have a custom webpack configuration, your application is already using webpack 5. If you do have a custom webpack configuration, you can refer to the [Next.js webpack 5 documentation](/docs/messages/webpack5) for upgrade guida",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#webpack-5-webpack-5",
    "position": 2
  },
  {
    "title": "Version 11",
    "section": "[Cleaning the `distDir` is now a default](#cleaning-the-distdir-is-now-a-default)",
    "section_id": "cleaning-the-distdir-is-now-a-default-cleaning-the-distdir-is-now-a-default",
    "heading_level": 3,
    "content": "### [Cleaning the `distDir` is now a default](#cleaning-the-distdir-is-now-a-default)\n\nThe build output directory (defaults to `.next`) is now cleared by default except for the Next.js caches. You can refer to [the cleaning `distDir` RFC](https://github.com/vercel/next.js/discussions/6009) for more information.\n\nIf your application was relying on this behavior previously you can disable the new default behavior by adding the `cleanDistDir: false` flag in `next.config.js`.",
    "preview": "The build output directory (defaults to `.next`) is now cleared by default except for the Next.js caches. You can refer to [the cleaning `distDir` RFC](https://github.com/vercel/next.js/discussions/6009) for more information. If your application was relying on this behavior previously you can disab",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#cleaning-the-distdir-is-now-a-default-cleaning-the-distdir-is-now-a-default",
    "position": 3
  },
  {
    "title": "Version 11",
    "section": "[`PORT` is now supported for `next dev` and `next start`](#port-is-now-supported-for-next-dev-and-next-start)",
    "section_id": "port-is-now-supported-for-next-dev-and-next-start-port-is-now-supported-for-next-dev-and-next-start",
    "heading_level": 3,
    "content": "### [`PORT` is now supported for `next dev` and `next start`](#port-is-now-supported-for-next-dev-and-next-start)\n\nNext.js 11 supports the `PORT` environment variable to set the port the application runs on. Using `-p`/`--port` is still recommended but if you were prohibited from using `-p` in any way you can now use `PORT` as an alternative:\n\nExample:\n\n```\nPORT=4000 next start\n\n```",
    "preview": "Next.js 11 supports the `PORT` environment variable to set the port the application runs on. Using `-p`/`--port` is still recommended but if you were prohibited from using `-p` in any way you can now use `PORT` as an alternative: Example: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#port-is-now-supported-for-next-dev-and-next-start-port-is-now-supported-for-next-dev-and-next-start",
    "position": 4
  },
  {
    "title": "Version 11",
    "section": "[`next.config.js` customization to import images](#nextconfigjs-customization-to-import-images)",
    "section_id": "next-config-js-customization-to-import-images-nextconfigjs-customization-to-import-images",
    "heading_level": 3,
    "content": "### [`next.config.js` customization to import images](#nextconfigjs-customization-to-import-images)\n\nNext.js 11 supports static image imports with `next/image`. This new feature relies on being able to process image imports. If you previously added the `next-images` or `next-optimized-images` packages you can either move to the new built-in support using `next/image` or disable the feature:\n\nnext.config.js\n\n```\nmodule.exports = {\n  images: {\n    disableStaticImages: true,\n  },\n}\n```",
    "preview": "Next.js 11 supports static image imports with `next/image`. This new feature relies on being able to process image imports. If you previously added the `next-images` or `next-optimized-images` packages you can either move to the new built-in support using `next/image` or disable the feature: next.c",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#next-config-js-customization-to-import-images-nextconfigjs-customization-to-import-images",
    "position": 5
  },
  {
    "title": "Version 11",
    "section": "[Remove `super.componentDidCatch()` from `pages/_app.js`](#remove-supercomponentdidcatch-from-pages_appjs)",
    "section_id": "remove-super-componentdidcatch-from-pages-app-js-remove-supercomponentdidcatch-from-pages-appjs",
    "heading_level": 3,
    "content": "### [Remove `super.componentDidCatch()` from `pages/_app.js`](#remove-supercomponentdidcatch-from-pages_appjs)\n\nThe `next/app` component's `componentDidCatch` was deprecated in Next.js 9 as it's no longer needed and has since been a no-op. In Next.js 11, it was removed.\n\nIf your `pages/_app.js` has a custom `componentDidCatch` method you can remove `super.componentDidCatch` as it is no longer needed.",
    "preview": "The `next/app` component's `componentDidCatch` was deprecated in Next.js 9 as it's no longer needed and has since been a no-op. In Next.js 11, it was removed. If your `pages/_app.js` has a custom `componentDidCatch` method you can remove `super.componentDidCatch` as it is no longer needed.",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-super-componentdidcatch-from-pages-app-js-remove-supercomponentdidcatch-from-pages-appjs",
    "position": 6
  },
  {
    "title": "Version 11",
    "section": "[Remove `Container` from `pages/_app.js`](#remove-container-from-pages_appjs)",
    "section_id": "remove-container-from-pages-app-js-remove-container-from-pages-appjs",
    "heading_level": 3,
    "content": "### [Remove `Container` from `pages/_app.js`](#remove-container-from-pages_appjs)\n\nThis export was deprecated in Next.js 9 as it's no longer needed and has since been a no-op with a warning during development. In Next.js 11 it was removed.\n\nIf your `pages/_app.js` imports `Container` from `next/app` you can remove `Container` as it was removed. Learn more in [the documentation](/docs/messages/app-container-deprecated).",
    "preview": "This export was deprecated in Next.js 9 as it's no longer needed and has since been a no-op with a warning during development. In Next.js 11 it was removed. If your `pages/_app.js` imports `Container` from `next/app` you can remove `Container` as it was removed. Learn more in [the documentation](/d",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-container-from-pages-app-js-remove-container-from-pages-appjs",
    "position": 7
  },
  {
    "title": "Version 11",
    "section": "[Remove `props.url` usage from page components](#remove-propsurl-usage-from-page-components)",
    "section_id": "remove-props-url-usage-from-page-components-remove-propsurl-usage-from-page-components",
    "heading_level": 3,
    "content": "### [Remove `props.url` usage from page components](#remove-propsurl-usage-from-page-components)\n\nThis property was deprecated in Next.js 4 and has since shown a warning during development. With the introduction of `getStaticProps` / `getServerSideProps` these methods already disallowed the usage of `props.url`. In Next.js 11, it was removed completely.\n\nYou can learn more in [the documentation](/docs/messages/url-deprecated).",
    "preview": "This property was deprecated in Next.js 4 and has since shown a warning during development. With the introduction of `getStaticProps` / `getServerSideProps` these methods already disallowed the usage of `props.url`. In Next.js 11, it was removed completely. You can learn more in [the documentation]",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-props-url-usage-from-page-components-remove-propsurl-usage-from-page-components",
    "position": 8
  },
  {
    "title": "Version 11",
    "section": "[Remove `unsized` property on `next/image`](#remove-unsized-property-on-nextimage)",
    "section_id": "remove-unsized-property-on-next-image-remove-unsized-property-on-nextimage",
    "heading_level": 3,
    "content": "### [Remove `unsized` property on `next/image`](#remove-unsized-property-on-nextimage)\n\nThe `unsized` property on `next/image` was deprecated in Next.js 10.0.1. You can use `layout=\"fill\"` instead. In Next.js 11 `unsized` was removed.",
    "preview": "The `unsized` property on `next/image` was deprecated in Next.js 10.0.1. You can use `layout=\"fill\"` instead. In Next.js 11 `unsized` was removed.",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-unsized-property-on-next-image-remove-unsized-property-on-nextimage",
    "position": 9
  },
  {
    "title": "Version 11",
    "section": "[Remove `modules` property on `next/dynamic`](#remove-modules-property-on-nextdynamic)",
    "section_id": "remove-modules-property-on-next-dynamic-remove-modules-property-on-nextdynamic",
    "heading_level": 3,
    "content": "### [Remove `modules` property on `next/dynamic`](#remove-modules-property-on-nextdynamic)\n\nThe `modules` and `render` option for `next/dynamic` were deprecated in Next.js 9.5. This was done in order to make the `next/dynamic` API closer to `React.lazy`. In Next.js 11, the `modules` and `render` options were removed.\n\nThis option hasn't been mentioned in the documentation since Next.js 8 so it's less likely that your application is using it.\n\nIf your application does use `modules` and `render` you can refer to [the documentation](/docs/messages/next-dynamic-modules).",
    "preview": "The `modules` and `render` option for `next/dynamic` were deprecated in Next.js 9.5. This was done in order to make the `next/dynamic` API closer to `React.lazy`. In Next.js 11, the `modules` and `render` options were removed. This option hasn't been mentioned in the documentation since Next.js 8 s",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-modules-property-on-next-dynamic-remove-modules-property-on-nextdynamic",
    "position": 10
  },
  {
    "title": "Version 11",
    "section": "[Remove `Head.rewind`](#remove-headrewind)",
    "section_id": "remove-head-rewind-remove-headrewind",
    "heading_level": 3,
    "content": "### [Remove `Head.rewind`](#remove-headrewind)\n\n`Head.rewind` has been a no-op since Next.js 9.5, in Next.js 11 it was removed. You can safely remove your usage of `Head.rewind`.",
    "preview": "`Head.rewind` has been a no-op since Next.js 9.5, in Next.js 11 it was removed. You can safely remove your usage of `Head.rewind`.",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#remove-head-rewind-remove-headrewind",
    "position": 11
  },
  {
    "title": "Version 11",
    "section": "[Moment.js locales excluded by default](#momentjs-locales-excluded-by-default)",
    "section_id": "moment-js-locales-excluded-by-default-momentjs-locales-excluded-by-default",
    "heading_level": 3,
    "content": "### [Moment.js locales excluded by default](#momentjs-locales-excluded-by-default)\n\nMoment.js includes translations for a lot of locales by default. Next.js now automatically excludes these locales by default to optimize bundle size for applications using Moment.js.\n\nTo load a specific locale use this snippet:\n\n```\nimport moment from 'moment'\nimport 'moment/locale/ja'\n \nmoment.locale('ja')\n```\n\nYou can opt-out of this new default by adding `excludeDefaultMomentLocales: false` to `next.config.js` if you do not want the new behavior, do note it's highly recommended to not disable this new optimization as it significantly reduces the size of Moment.js.",
    "preview": "Moment.js includes translations for a lot of locales by default. Next.js now automatically excludes these locales by default to optimize bundle size for applications using Moment.js. To load a specific locale use this snippet: [Code Block] You can opt-out of this new default by adding `excludeDef",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#moment-js-locales-excluded-by-default-momentjs-locales-excluded-by-default",
    "position": 12
  },
  {
    "title": "Version 11",
    "section": "[Update usage of `router.events`](#update-usage-of-routerevents)",
    "section_id": "update-usage-of-router-events-update-usage-of-routerevents",
    "heading_level": 3,
    "content": "### [Update usage of `router.events`](#update-usage-of-routerevents)\n\nIn case you're accessing `router.events` during rendering, in Next.js 11 `router.events` is no longer provided during pre-rendering. Ensure you're accessing `router.events` in `useEffect`:\n\n```\nuseEffect(() => {\n  const handleRouteChange = (url, { shallow }) => {\n    console.log(\n      `App is changing to ${url} ${\n        shallow ? 'with' : 'without'\n      } shallow routing`\n    )\n  }\n \n  router.events.on('routeChangeStart', handleRouteChange)\n \n  // If the component is unmounted, unsubscribe\n  // from the event with the `off` method:\n  return () => {\n    router.events.off('routeChangeStart', handleRouteChange)\n  }\n}, [router])\n```\n\nIf your application uses `router.router.events` which was an internal property that was not public please make sure to use `router.events` as well.",
    "preview": "In case you're accessing `router.events` during rendering, in Next.js 11 `router.events` is no longer provided during pre-rendering. Ensure you're accessing `router.events` in `useEffect`: ``` useEffect(() => { const handleRouteChange = (url, { shallow }) => { console.log( `App is chang",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#update-usage-of-router-events-update-usage-of-routerevents",
    "position": 13
  },
  {
    "title": "Version 11",
    "section": "[React 16 to 17](#react-16-to-17)",
    "section_id": "react-16-to-17-react-16-to-17",
    "heading_level": 2,
    "content": "## [React 16 to 17](#react-16-to-17)\n\nReact 17 introduced a new [JSX Transform](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html) that brings a long-time Next.js feature to the wider React ecosystem: Not having to `import React from 'react'` when using JSX. When using React 17 Next.js will automatically use the new transform. This transform does not make the `React` variable global, which was an unintended side-effect of the previous Next.js implementation. A [codemod is available](/docs/pages/building-your-application/upgrading/codemods#add-missing-react-import) to automatically fix cases where you accidentally used `React` without importing it.\n\nMost applications already use the latest version of React, with Next.js 11 the minimum React version has been updated to 17.0.2.\n\nTo upgrade you can run the following command:\n\n```\nnpm install react@latest react-dom@latest\n\n```\n\nOr using `yarn`:\n\n```\nyarn add react@latest react-dom@latest\n\n```\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "React 17 introduced a new [JSX Transform](https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html) that brings a long-time Next.js feature to the wider React ecosystem: Not having to `import React from 'react'` when using JSX. When using React 17 Next.js will automatically use the",
    "url": "https://nextjs.org/docs/pages/building-your-application/upgrading/version-11#react-16-to-17-react-16-to-17",
    "position": 14
  }
]