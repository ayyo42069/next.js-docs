[
  {
    "title": "cssChunking",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Configuration](/docs/app/api-reference/config)[next.config.js](/docs/app/api-reference/config/next-config-js)cssChunking",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Configuration](/docs/app/api-reference/config)[next.config.js](/docs/app/api-reference/config/next-config-js)cssChunking",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/cssChunking#untitled-section",
    "position": 0
  },
  {
    "title": "cssChunking",
    "section": "cssChunking",
    "section_id": "csschunking",
    "heading_level": 1,
    "content": "# cssChunking\n\nThis feature is currently experimental and subject to change, it's not recommended for production. Try it out and share your feedback on [GitHub](https://github.com/vercel/next.js/issues).\n\nCSS Chunking is a strategy used to improve the performance of your web application by splitting and re-ordering CSS files into chunks. This allows you to load only the CSS that is needed for a specific route, instead of loading all the application's CSS at once.\n\nYou can control how CSS files are chunked using the `experimental.cssChunking` option in your `next.config.js` file:\n\nnext.config.ts\n\nTypeScript\n\nJavaScriptTypeScript\n\n```\nimport type { NextConfig } from 'next'\n \nconst nextConfig = {\n  experimental: {\n    cssChunking: true, // default\n  },\n} satisfies NextConfig\n \nexport default nextConfig\n```",
    "preview": "This feature is currently experimental and subject to change, it's not recommended for production. Try it out and share your feedback on [GitHub](https://github.com/vercel/next.js/issues). CSS Chunking is a strategy used to improve the performance of your web application by splitting and re-orderin",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/cssChunking#csschunking",
    "position": 1
  },
  {
    "title": "cssChunking",
    "section": "[Options](#options)",
    "section_id": "options-options",
    "heading_level": 2,
    "content": "## [Options](#options)\n\n* **`true` (default)**: Next.js will try to merge CSS files whenever possible, determining explicit and implicit dependencies between files from import order to reduce the number of chunks and therefore the number of requests.\n* **`false`**: Next.js will not attempt to merge or re-order your CSS files.\n* **`'strict'`**: Next.js will load CSS files in the correct order they are imported into your files, which can lead to more chunks and requests.\n\nYou may consider using `'strict'` if you run into unexpected CSS behavior. For example, if you import `a.css` and `b.css` in different files using a different `import` order (`a` before `b`, or `b` before `a`), `true` will merge the files in any order and assume there are no dependencies between them. However, if `b.css` depends on `a.css`, you may want to use `'strict'` to prevent the files from being merged, and instead, load them in the order they are imported - which can result in more chunks and requests.\n\nFor most applications, we recommend `true` as it leads to fewer requests and better performance.\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "* **`true` (default)**: Next.js will try to merge CSS files whenever possible, determining explicit and implicit dependencies between files from import order to reduce the number of chunks and therefore the number of requests. * **`false`**: Next.js will not attempt to merge or re-order your CSS fil",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js/cssChunking#options-options",
    "position": 2
  }
]