[
  {
    "title": "Rendering",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Pages Router](/docs/pages)[Building Your Application](/docs/pages/building-your-application)Rendering",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Pages Router](/docs/pages)[Building Your Application](/docs/pages/building-your-application)Rendering",
    "url": "https://nextjs.org/docs/pages/building-your-application/rendering#untitled-section",
    "position": 0
  },
  {
    "title": "Rendering",
    "section": "Rendering",
    "section_id": "rendering",
    "heading_level": 1,
    "content": "# Rendering\n\nBy default, Next.js **pre-renders** every page. This means that Next.js generates HTML for each page in advance, instead of having it all done by client-side JavaScript. Pre-rendering can result in better performance and SEO.\n\nEach generated HTML is associated with minimal JavaScript code necessary for that page. When a page is loaded by the browser, its JavaScript code runs and makes the page fully interactive (this process is called [hydration](https://react.dev/reference/react-dom/client/hydrateRoot) in React).",
    "preview": "By default, Next.js **pre-renders** every page. This means that Next.js generates HTML for each page in advance, instead of having it all done by client-side JavaScript. Pre-rendering can result in better performance and SEO. Each generated HTML is associated with minimal JavaScript code necessary",
    "url": "https://nextjs.org/docs/pages/building-your-application/rendering#rendering",
    "position": 1
  },
  {
    "title": "Rendering",
    "section": "[Pre-rendering](#pre-rendering)",
    "section_id": "pre-rendering-pre-rendering",
    "heading_level": 3,
    "content": "### [Pre-rendering](#pre-rendering)\n\nNext.js has two forms of pre-rendering: **Static Generation** and **Server-side Rendering**. The difference is in **when** it generates the HTML for a page.\n\n* Static Generation: The HTML is generated at **build time** and will be reused on each request.\n* Server-side Rendering: The HTML is generated on **each request**.\n\nImportantly, Next.js lets you choose which pre-rendering form you'd like to use for each page. You can create a \"hybrid\" Next.js app by using Static Generation for most pages and using Server-side Rendering for others.\n\nWe recommend using Static Generation over Server-side Rendering for performance reasons. Statically generated pages can be cached by CDN with no extra configuration to boost performance. However, in some cases, Server-side Rendering might be the only option.\n\nYou can also use client-side data fetching along with Static Generation or Server-side Rendering. That means some parts of a page can be rendered entirely by clientside JavaScript. To learn more, take a look at the [Data Fetching](/docs/pages/building-your-application/data-fetching/client-side) documentation.\n\n[### Server-side Rendering (SSR)\n\nUse Server-side Rendering to render pages on each request.](/docs/pages/building-your-application/rendering/server-side-rendering)[### Static Site Generation (SSG)\n\nUse Static Site Generation (SSG) to pre-render pages at build time.](/docs/pages/building-your-application/rendering/static-site-generation)[### Automatic Static Optimization\n\nNext.js automatically optimizes your app to be static HTML whenever possible. Learn how it works here.](/docs/pages/building-your-application/rendering/automatic-static-optimization)[### Client-side Rendering (CSR)\n\nLearn how to implement client-side rendering in the Pages Router.](/docs/pages/building-your-application/rendering/client-side-rendering)[### Edge and Node.js Runtimes\n\nLearn more about the switchable runtimes (Edge and Node.js) in Next.js.](/docs/pages/building-your-application/rendering/edge-and-nodejs-runtimes)\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "Next.js has two forms of pre-rendering: **Static Generation** and **Server-side Rendering**. The difference is in **when** it generates the HTML for a page. * Static Generation: The HTML is generated at **build time** and will be reused on each request. * Server-side Rendering: The HTML is generate",
    "url": "https://nextjs.org/docs/pages/building-your-application/rendering#pre-rendering-pre-rendering",
    "position": 2
  }
]