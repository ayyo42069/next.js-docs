[
  {
    "title": "next.config.js",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[API Reference](/docs/app/api-reference)[Configuration](/docs/app/api-reference/config)next.config.js",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [API Reference](/docs/app/api-reference)[Configuration](/docs/app/api-reference/config)next.config.js",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#untitled-section",
    "position": 0
  },
  {
    "title": "next.config.js",
    "section": "next.config.js",
    "section_id": "next-config-js",
    "heading_level": 1,
    "content": "# next.config.js\n\nNext.js can be configured through a `next.config.js` file in the root of your project directory (for example, by `package.json`) with a default export.\n\nnext.config.js\n\n```\n// @ts-check\n \n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  /* config options here */\n}\n \nmodule.exports = nextConfig\n```",
    "preview": "Next.js can be configured through a `next.config.js` file in the root of your project directory (for example, by `package.json`) with a default export. next.config.js [Code Block]",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#next-config-js",
    "position": 1
  },
  {
    "title": "next.config.js",
    "section": "[ECMAScript Modules](#ecmascript-modules)",
    "section_id": "ecmascript-modules-ecmascript-modules",
    "heading_level": 2,
    "content": "## [ECMAScript Modules](#ecmascript-modules)\n\n`next.config.js` is a regular Node.js module, not a JSON file. It gets used by the Next.js server and build phases, and it's not included in the browser build.\n\nIf you need [ECMAScript modules](https://nodejs.org/api/esm.html), you can use `next.config.mjs`:\n\nnext.config.mjs\n\n```\n// @ts-check\n \n/**\n * @type {import('next').NextConfig}\n */\nconst nextConfig = {\n  /* config options here */\n}\n \nexport default nextConfig\n```\n\n> **Good to know**: `next.config` with the `.cjs`, `.cts`, or `.mts` extensions are currently **not** supported.",
    "preview": "`next.config.js` is a regular Node.js module, not a JSON file. It gets used by the Next.js server and build phases, and it's not included in the browser build. If you need [ECMAScript modules](https://nodejs.org/api/esm.html), you can use `next.config.mjs`: next.config.mjs [Code Block] > **Good",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#ecmascript-modules-ecmascript-modules",
    "position": 2
  },
  {
    "title": "next.config.js",
    "section": "[Configuration as a Function](#configuration-as-a-function)",
    "section_id": "configuration-as-a-function-configuration-as-a-function",
    "heading_level": 2,
    "content": "## [Configuration as a Function](#configuration-as-a-function)\n\nYou can also use a function:\n\nnext.config.mjs\n\n```\n// @ts-check\n \nexport default (phase, { defaultConfig }) => {\n  /**\n   * @type {import('next').NextConfig}\n   */\n  const nextConfig = {\n    /* config options here */\n  }\n  return nextConfig\n}\n```",
    "preview": "You can also use a function: next.config.mjs [Code Block]",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#configuration-as-a-function-configuration-as-a-function",
    "position": 3
  },
  {
    "title": "next.config.js",
    "section": "[Async Configuration](#async-configuration)",
    "section_id": "async-configuration-async-configuration",
    "heading_level": 3,
    "content": "### [Async Configuration](#async-configuration)\n\nSince Next.js 12.1.0, you can use an async function:\n\nnext.config.js\n\n```\n// @ts-check\n \nmodule.exports = async (phase, { defaultConfig }) => {\n  /**\n   * @type {import('next').NextConfig}\n   */\n  const nextConfig = {\n    /* config options here */\n  }\n  return nextConfig\n}\n```",
    "preview": "Since Next.js 12.1.0, you can use an async function: next.config.js [Code Block]",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#async-configuration-async-configuration",
    "position": 4
  },
  {
    "title": "next.config.js",
    "section": "[Phase](#phase)",
    "section_id": "phase-phase",
    "heading_level": 3,
    "content": "### [Phase](#phase)\n\n`phase` is the current context in which the configuration is loaded. You can see the [available phases](https://github.com/vercel/next.js/blob/5e6b008b561caf2710ab7be63320a3d549474a5b/packages/next/shared/lib/constants.ts#L19-L23). Phases can be imported from `next/constants`:\n\nnext.config.js\n\n```\n// @ts-check\n \nconst { PHASE_DEVELOPMENT_SERVER } = require('next/constants')\n \nmodule.exports = (phase, { defaultConfig }) => {\n  if (phase === PHASE_DEVELOPMENT_SERVER) {\n    return {\n      /* development only config options here */\n    }\n  }\n \n  return {\n    /* config options for all phases except development here */\n  }\n}\n```",
    "preview": "`phase` is the current context in which the configuration is loaded. You can see the [available phases](https://github.com/vercel/next.js/blob/5e6b008b561caf2710ab7be63320a3d549474a5b/packages/next/shared/lib/constants.ts#L19-L23). Phases can be imported from `next/constants`: next.config.js [Code",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#phase-phase",
    "position": 5
  },
  {
    "title": "next.config.js",
    "section": "[TypeScript](#typescript)",
    "section_id": "typescript-typescript",
    "heading_level": 2,
    "content": "## [TypeScript](#typescript)\n\nIf you are using TypeScript in your project, you can use `next.config.ts` to use TypeScript in your configuration:\n\nnext.config.ts\n\n```\nimport type { NextConfig } from 'next'\n \nconst nextConfig: NextConfig = {\n  /* config options here */\n}\n \nexport default nextConfig\n```\n\nThe commented lines are the place where you can put the configs allowed by `next.config.js`, which are [defined in this file](https://github.com/vercel/next.js/blob/canary/packages/next/src/server/config-shared.ts).\n\nHowever, none of the configs are required, and it's not necessary to understand what each config does. Instead, search for the features you need to enable or modify in this section and they will show you what to do.\n\n> Avoid using new JavaScript features not available in your target Node.js version. `next.config.js` will not be parsed by Webpack or Babel.\n\nThis page documents all the available configuration options:",
    "preview": "If you are using TypeScript in your project, you can use `next.config.ts` to use TypeScript in your configuration: next.config.ts [Code Block] The commented lines are the place where you can put the configs allowed by `next.config.js`, which are [defined in this file](https://github.com/vercel/ne",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#typescript-typescript",
    "position": 6
  },
  {
    "title": "next.config.js",
    "section": "[Unit Testing (experimental)](#unit-testing-experimental)",
    "section_id": "unit-testing-experimental-unit-testing-experimental",
    "heading_level": 2,
    "content": "## [Unit Testing (experimental)](#unit-testing-experimental)\n\nStarting in Next.js 15.1, the `next/experimental/testing/server` package contains utilities to help unit test `next.config.js` files.\n\nThe `unstable_getResponseFromNextConfig` function runs the [`headers`](/docs/app/api-reference/config/next-config-js/headers), [`redirects`](/docs/app/api-reference/config/next-config-js/redirects), and [`rewrites`](/docs/app/api-reference/config/next-config-js/rewrites) functions from `next.config.js` with the provided request information and returns `NextResponse` with the results of the routing.\n\n> The response from `unstable_getResponseFromNextConfig` only considers `next.config.js` fields and does not consider middleware or filesystem routes, so the result in production may be different than the unit test.\n\n```\nimport {\n  getRedirectUrl,\n  unstable_getResponseFromNextConfig,\n} from 'next/experimental/testing/server'\n \nconst response = await unstable_getResponseFromNextConfig({\n  url: 'https://nextjs.org/test',\n  nextConfig: {\n    async redirects() {\n      return [{ source: '/test', destination: '/test2', permanent: false }]\n    },\n  },\n})\nexpect(response.status).toEqual(307)\nexpect(getRedirectUrl(response)).toEqual('https://nextjs.org/test2')\n```\n\n[### allowedDevOrigins\n\nUse `allowedDevOrigins` to configure additional origins that can request the dev server.](/docs/app/api-reference/config/next-config-js/allowedDevOrigins)[### appDir\n\nEnable the App Router to use layouts, streaming, and more.](/docs/app/api-reference/config/next-config-js/appDir)[### assetPrefix\n\nLearn how to use the assetPrefix config option to configure your CDN.](/docs/app/api-reference/config/next-config-js/assetPrefix)[### authInterrupts\n\nLearn how to enable the experimental `authInterrupts` configuration option to use `forbidden` and `unauthorized`.](/docs/app/api-reference/config/next-config-js/authInterrupts)[### basePath\n\nUse `basePath` to deploy a Next.js application under a sub-path of a domain.](/docs/app/api-reference/config/next-config-js/basePath)[### cacheLife\n\nLearn how to set up cacheLife configurations in Next.js.](/docs/app/api-reference/config/next-config-js/cacheLife)[### compress\n\nNext.js provides gzip compression to compress rendered content and static files, it only works with the server target. Learn more about it here.](/docs/app/api-reference/config/next-config-js/compress)[### crossOrigin\n\nUse the `crossOrigin` option to add a crossOrigin tag on the `script` tags generated by `next/script`.](/docs/app/api-reference/config/next-config-js/crossOrigin)[### cssChunking\n\nUse the `cssChunking` option to control how CSS files are chunked in your Next.js application.](/docs/app/api-reference/config/next-config-js/cssChunking)[### devIndicators\n\nConfiguration options for the on-screen indicator that gives context about the current route you're viewing during development.](/docs/app/api-reference/config/next-config-js/devIndicators)[### distDir\n\nSet a custom build directory to use instead of the default .next directory.](/docs/app/api-reference/config/next-config-js/distDir)[### dynamicIO\n\nLearn how to enable the dynamicIO flag in Next.js.](/docs/app/api-reference/config/next-config-js/dynamicIO)[### env\n\nLearn to add and access environment variables in your Next.js application at build time.](/docs/app/api-reference/config/next-config-js/env)[### eslint\n\nNext.js reports ESLint errors and warnings during builds by default. Learn how to opt-out of this behavior here.](/docs/app/api-reference/config/next-config-js/eslint)[### expireTime\n\nCustomize stale-while-revalidate expire time for ISR enabled pages.](/docs/app/api-reference/config/next-config-js/expireTime)[### exportPathMap\n\nCustomize the pages that will be exported as HTML files when using `next export`.](/docs/app/api-reference/config/next-config-js/exportPathMap)[### generateBuildId\n\nConfigure the build id, which is used to identify the current build in which your application is being served.](/docs/app/api-reference/config/next-config-js/generateBuildId)[### generateEtags\n\nNext.js will generate etags for every page by default. Learn more about how to disable etag generation here.](/docs/app/api-reference/config/next-config-js/generateEtags)[### headers\n\nAdd custom HTTP headers to your Next.js app.](/docs/app/api-reference/config/next-config-js/headers)[### htmlLimitedBots\n\nSpecify a list of user agents that should receive blocking metadata.](/docs/app/api-reference/config/next-config-js/htmlLimitedBots)[### httpAgentOptions\n\nNext.js will automatically use HTTP Keep-Alive by default. Learn more about how to disable HTTP Keep-Alive here.](/docs/app/api-reference/config/next-config-js/httpAgentOptions)[### images\n\nCustom configuration for the next/image loader](/docs/app/api-reference/config/next-config-js/images)[### cacheHandler\n\nConfigure the Next.js cache used for storing and revalidating data to use any external service like Redis, Memcached, or others.](/docs/app/api-reference/config/next-config-js/incrementalCacheHandlerPath)[### inlineCss\n\nEnable inline CSS support.](/docs/app/api-reference/config/next-config-js/inlineCss)[### logging\n\nConfigure how data fetches are logged to the console when running Next.js in development mode.](/docs/app/api-reference/config/next-config-js/logging)[### mdxRs\n\nUse the new Rust compiler to compile MDX files in the App Router.](/docs/app/api-reference/config/next-config-js/mdxRs)[### onDemandEntries\n\nConfigure how Next.js will dispose and keep in memory pages created in development.](/docs/app/api-reference/config/next-config-js/onDemandEntries)[### optimizePackageImports\n\nAPI Reference for optimizePackageImports Next.js Config Option](/docs/app/api-reference/config/next-config-js/optimizePackageImports)[### output\n\nNext.js automatically traces which files are needed by each page to allow for easy deployment of your application. Learn how it works here.](/docs/app/api-reference/config/next-config-js/output)[### pageExtensions\n\nExtend the default page extensions used by Next.js when resolving pages in the Pages Router.](/docs/app/api-reference/config/next-config-js/pageExtensions)[### poweredByHeader\n\nNext.js will add the `x-powered-by` header by default. Learn to opt-out of it here.](/docs/app/api-reference/config/next-config-js/poweredByHeader)[### ppr\n\nLearn how to enable Partial Prerendering in Next.js.](/docs/app/api-reference/config/next-config-js/ppr)[### productionBrowserSourceMaps\n\nEnables browser source map generation during the production build.](/docs/app/api-reference/config/next-config-js/productionBrowserSourceMaps)[### reactCompiler\n\nEnable the React Compiler to automatically optimize component rendering.](/docs/app/api-reference/config/next-config-js/reactCompiler)[### reactMaxHeadersLength\n\nThe maximum length of the headers that are emitted by React and added to the response.](/docs/app/api-reference/config/next-config-js/reactMaxHeadersLength)[### reactStrictMode\n\nThe complete Next.js runtime is now Strict Mode-compliant, learn how to opt-in](/docs/app/api-reference/config/next-config-js/reactStrictMode)[### redirects\n\nAdd redirects to your Next.js app.](/docs/app/api-reference/config/next-config-js/redirects)[### rewrites\n\nAdd rewrites to your Next.js app.](/docs/app/api-reference/config/next-config-js/rewrites)[### sassOptions\n\nConfigure Sass options.](/docs/app/api-reference/config/next-config-js/sassOptions)[### serverActions\n\nConfigure Server Actions behavior in your Next.js application.](/docs/app/api-reference/config/next-config-js/serverActions)[### serverComponentsHmrCache\n\nConfigure whether fetch responses in Server Components are cached across HMR refresh requests.](/docs/app/api-reference/config/next-config-js/serverComponentsHmrCache)[### serverExternalPackages\n\nOpt-out specific dependencies from the Server Components bundling and use native Node.js `require`.](/docs/app/api-reference/config/next-config-js/serverExternalPackages)[### staleTimes\n\nLearn how to override the invalidation time of the Client Router Cache.](/docs/app/api-reference/config/next-config-js/staleTimes)[### staticGeneration\\*\n\nLearn how to configure static generation in your Next.js application.](/docs/app/api-reference/config/next-config-js/staticGeneration)[### trailingSlash\n\nConfigure Next.js pages to resolve with or without a trailing slash.](/docs/app/api-reference/config/next-config-js/trailingSlash)[### transpilePackages\n\nAutomatically transpile and bundle dependencies from local packages (like monorepos) or from external dependencies (`node\\_modules`).](/docs/app/api-reference/config/next-config-js/transpilePackages)[### turbo\n\nConfigure Next.js with Turbopack-specific options](/docs/app/api-reference/config/next-config-js/turbo)[### typedRoutes\n\nEnable experimental support for statically typed links.](/docs/app/api-reference/config/next-config-js/typedRoutes)[### typescript\n\nNext.js reports TypeScript errors by default. Learn to opt-out of this behavior here.](/docs/app/api-reference/config/next-config-js/typescript)[### urlImports\n\nConfigure Next.js to allow importing modules from external URLs.](/docs/app/api-reference/config/next-config-js/urlImports)[### useCache\n\nLearn how to enable the useCache flag in Next.js.](/docs/app/api-reference/config/next-config-js/useCache)[### useLightningcss\n\nEnable experimental support for Lightning CSS.](/docs/app/api-reference/config/next-config-js/useLightningcss)[### ViewTransition\n\nEnable ViewTransition API from React in App Router](/docs/app/api-reference/config/next-config-js/viewTransition)[### webpack\n\nLearn how to customize the webpack config used by Next.js](/docs/app/api-reference/config/next-config-js/webpack)[### webVitalsAttribution\n\nLearn how to use the webVitalsAttribution option to pinpoint the source of Web Vitals issues.](/docs/app/api-reference/config/next-config-js/webVitalsAttribution)\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "Starting in Next.js 15.1, the `next/experimental/testing/server` package contains utilities to help unit test `next.config.js` files. The `unstable_getResponseFromNextConfig` function runs the [`headers`](/docs/app/api-reference/config/next-config-js/headers), [`redirects`](/docs/app/api-reference/",
    "url": "https://nextjs.org/docs/app/api-reference/config/next-config-js#unit-testing-experimental-unit-testing-experimental",
    "position": 7
  }
]