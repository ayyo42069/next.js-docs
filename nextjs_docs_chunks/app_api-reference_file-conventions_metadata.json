[
  {
    "title": "Metadata Files API Reference",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[API Reference](/docs/app/api-reference)[File Conventions](/docs/app/api-reference/file-conventions)Metadata Files",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [API Reference](/docs/app/api-reference)[File Conventions](/docs/app/api-reference/file-conventions)Metadata Files",
    "url": "https://nextjs.org/docs/app/api-reference/file-conventions/metadata#untitled-section",
    "position": 0
  },
  {
    "title": "Metadata Files API Reference",
    "section": "Metadata Files API Reference",
    "section_id": "metadata-files-api-reference",
    "heading_level": 1,
    "content": "# Metadata Files API Reference\n\nThis section of the docs covers **Metadata file conventions**. File-based metadata can be defined by adding special metadata files to route segments.\n\nEach file convention can be defined using a static file (e.g. `opengraph-image.jpg`), or a dynamic variant that uses code to generate the file (e.g. `opengraph-image.js`).\n\nOnce a file is defined, Next.js will automatically serve the file (with hashes in production for caching) and update the relevant head elements with the correct metadata, such as the asset's URL, file type, and image size.\n\n> **Good to know**:\n>\n> * Special Route Handlers like [`sitemap.ts`](/docs/app/api-reference/file-conventions/metadata/sitemap), [`opengraph-image.tsx`](/docs/app/api-reference/file-conventions/metadata/opengraph-image), and [`icon.tsx`](/docs/app/api-reference/file-conventions/metadata/app-icons), and other [metadata files](/docs/app/api-reference/file-conventions/metadata) are cached by default.\n> * If using along with [`middleware.ts`](/docs/app/api-reference/file-conventions/middleware), [configure the matcher](/docs/app/building-your-application/routing/middleware#matcher) to exclude the metadata files.\n\n[### favicon, icon, and apple-icon\n\nAPI Reference for the Favicon, Icon and Apple Icon file conventions.](/docs/app/api-reference/file-conventions/metadata/app-icons)[### manifest.json\n\nAPI Reference for manifest.json file.](/docs/app/api-reference/file-conventions/metadata/manifest)[### opengraph-image and twitter-image\n\nAPI Reference for the Open Graph Image and Twitter Image file conventions.](/docs/app/api-reference/file-conventions/metadata/opengraph-image)[### robots.txt\n\nAPI Reference for robots.txt file.](/docs/app/api-reference/file-conventions/metadata/robots)[### sitemap.xml\n\nAPI Reference for the sitemap.xml file.](/docs/app/api-reference/file-conventions/metadata/sitemap)\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "This section of the docs covers **Metadata file conventions**. File-based metadata can be defined by adding special metadata files to route segments. Each file convention can be defined using a static file (e.g. `opengraph-image.jpg`), or a dynamic variant that uses code to generate the file (e.g.",
    "url": "https://nextjs.org/docs/app/api-reference/file-conventions/metadata#metadata-files-api-reference",
    "position": 1
  }
]