[
  {
    "title": "getStaticPaths",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Building Your Application](/docs/pages/building-your-application)[Data Fetching](/docs/pages/building-your-application/data-fetching)getStaticPaths",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Building Your Application](/docs/pages/building-your-application)[Data Fetching](/docs/pages/building-your-application/data-fetching)getStaticPaths",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#untitled-section",
    "position": 0
  },
  {
    "title": "getStaticPaths",
    "section": "getStaticPaths",
    "section_id": "getstaticpaths",
    "heading_level": 1,
    "content": "# getStaticPaths\n\nIf a page has [Dynamic Routes](/docs/pages/building-your-application/routing/dynamic-routes) and uses `getStaticProps`, it needs to define a list of paths to be statically generated.\n\nWhen you export a function called `getStaticPaths` (Static Site Generation) from a page that uses dynamic routes, Next.js will statically pre-render all the paths specified by `getStaticPaths`.\n\npages/repo/[name].tsx\n\nTypeScript\n\nJavaScriptTypeScript\n\n```\nimport type {\n  InferGetStaticPropsType,\n  GetStaticProps,\n  GetStaticPaths,\n} from 'next'\n \ntype Repo = {\n  name: string\n  stargazers_count: number\n}\n \nexport const getStaticPaths = (async () => {\n  return {\n    paths: [\n      {\n        params: {\n          name: 'next.js',\n        },\n      }, // See the \"paths\" section below\n    ],\n    fallback: true, // false or \"blocking\"\n  }\n}) satisfies GetStaticPaths\n \nexport const getStaticProps = (async (context) => {\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\n  const repo = await res.json()\n  return { props: { repo } }\n}) satisfies GetStaticProps<{\n  repo: Repo\n}>\n \nexport default function Page({\n  repo,\n}: InferGetStaticPropsType<typeof getStaticProps>) {\n  return repo.stargazers_count\n}\n```\n\nThe [`getStaticPaths` API reference](/docs/pages/api-reference/functions/get-static-paths) covers all parameters and props that can be used with `getStaticPaths`.",
    "preview": "If a page has [Dynamic Routes](/docs/pages/building-your-application/routing/dynamic-routes) and uses `getStaticProps`, it needs to define a list of paths to be statically generated. When you export a function called `getStaticPaths` (Static Site Generation) from a page that uses dynamic routes, Ne",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#getstaticpaths",
    "position": 1
  },
  {
    "title": "getStaticPaths",
    "section": "[When should I use getStaticPaths?](#when-should-i-use-getstaticpaths)",
    "section_id": "when-should-i-use-getstaticpaths-when-should-i-use-getstaticpaths",
    "heading_level": 2,
    "content": "## [When should I use getStaticPaths?](#when-should-i-use-getstaticpaths)\n\nYou should use `getStaticPaths` if you\u2019re statically pre-rendering pages that use dynamic routes and:\n\n* The data comes from a headless CMS\n* The data comes from a database\n* The data comes from the filesystem\n* The data can be publicly cached (not user-specific)\n* The page must be pre-rendered (for SEO) and be very fast \u2014 `getStaticProps` generates `HTML` and `JSON` files, both of which can be cached by a CDN for performance",
    "preview": "You should use `getStaticPaths` if you\u2019re statically pre-rendering pages that use dynamic routes and: * The data comes from a headless CMS * The data comes from a database * The data comes from the filesystem * The data can be publicly cached (not user-specific) * The page must be pre-rendered (for",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#when-should-i-use-getstaticpaths-when-should-i-use-getstaticpaths",
    "position": 2
  },
  {
    "title": "getStaticPaths",
    "section": "[When does getStaticPaths run](#when-does-getstaticpaths-run)",
    "section_id": "when-does-getstaticpaths-run-when-does-getstaticpaths-run",
    "heading_level": 2,
    "content": "## [When does getStaticPaths run](#when-does-getstaticpaths-run)\n\n`getStaticPaths` will only run during build in production, it will not be called during runtime. You can validate code written inside `getStaticPaths` is removed from the client-side bundle [with this tool](https://next-code-elimination.vercel.app/).",
    "preview": "`getStaticPaths` will only run during build in production, it will not be called during runtime. You can validate code written inside `getStaticPaths` is removed from the client-side bundle [with this tool](https://next-code-elimination.vercel.app/).",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#when-does-getstaticpaths-run-when-does-getstaticpaths-run",
    "position": 3
  },
  {
    "title": "getStaticPaths",
    "section": "[How does getStaticProps run with regards to getStaticPaths](#how-does-getstaticprops-run-with-regards-to-getstaticpaths)",
    "section_id": "how-does-getstaticprops-run-with-regards-to-getstaticpaths-how-does-getstaticprops-run-with-regards-to-getstaticpaths",
    "heading_level": 3,
    "content": "### [How does getStaticProps run with regards to getStaticPaths](#how-does-getstaticprops-run-with-regards-to-getstaticpaths)\n\n* `getStaticProps` runs during `next build` for any `paths` returned during build\n* `getStaticProps` runs in the background when using `fallback: true`\n* `getStaticProps` is called before initial render when using `fallback: blocking`",
    "preview": "* `getStaticProps` runs during `next build` for any `paths` returned during build * `getStaticProps` runs in the background when using `fallback: true` * `getStaticProps` is called before initial render when using `fallback: blocking`",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#how-does-getstaticprops-run-with-regards-to-getstaticpaths-how-does-getstaticprops-run-with-regards-to-getstaticpaths",
    "position": 4
  },
  {
    "title": "getStaticPaths",
    "section": "[Where can I use getStaticPaths](#where-can-i-use-getstaticpaths)",
    "section_id": "where-can-i-use-getstaticpaths-where-can-i-use-getstaticpaths",
    "heading_level": 2,
    "content": "## [Where can I use getStaticPaths](#where-can-i-use-getstaticpaths)\n\n* `getStaticPaths` **must** be used with `getStaticProps`\n* You **cannot** use `getStaticPaths` with [`getServerSideProps`](/docs/pages/building-your-application/data-fetching/get-server-side-props)\n* You can export `getStaticPaths` from a [Dynamic Route](/docs/pages/building-your-application/routing/dynamic-routes) that also uses `getStaticProps`\n* You **cannot** export `getStaticPaths` from non-page file (e.g. your `components` folder)\n* You must export `getStaticPaths` as a standalone function, and not a property of the page component",
    "preview": "* `getStaticPaths` **must** be used with `getStaticProps` * You **cannot** use `getStaticPaths` with [`getServerSideProps`](/docs/pages/building-your-application/data-fetching/get-server-side-props) * You can export `getStaticPaths` from a [Dynamic Route](/docs/pages/building-your-application/routin",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#where-can-i-use-getstaticpaths-where-can-i-use-getstaticpaths",
    "position": 5
  },
  {
    "title": "getStaticPaths",
    "section": "[Runs on every request in development](#runs-on-every-request-in-development)",
    "section_id": "runs-on-every-request-in-development-runs-on-every-request-in-development",
    "heading_level": 2,
    "content": "## [Runs on every request in development](#runs-on-every-request-in-development)\n\nIn development (`next dev`), `getStaticPaths` will be called on every request.",
    "preview": "In development (`next dev`), `getStaticPaths` will be called on every request.",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#runs-on-every-request-in-development-runs-on-every-request-in-development",
    "position": 6
  },
  {
    "title": "getStaticPaths",
    "section": "[Generating paths on-demand](#generating-paths-on-demand)",
    "section_id": "generating-paths-on-demand-generating-paths-on-demand",
    "heading_level": 2,
    "content": "## [Generating paths on-demand](#generating-paths-on-demand)\n\n`getStaticPaths` allows you to control which pages are generated during the build instead of on-demand with [`fallback`](/docs/pages/api-reference/functions/get-static-paths#fallback-blocking). Generating more pages during a build will cause slower builds.\n\nYou can defer generating all pages on-demand by returning an empty array for `paths`. This can be especially helpful when deploying your Next.js application to multiple environments. For example, you can have faster builds by generating all pages on-demand for previews (but not production builds). This is helpful for sites with hundreds/thousands of static pages.\n\npages/posts/[id].js\n\n```\nexport async function getStaticPaths() {\n  // When this is true (in preview environments) don't\n  // prerender any static pages\n  // (faster builds, but slower initial page load)\n  if (process.env.SKIP_BUILD_STATIC_GENERATION) {\n    return {\n      paths: [],\n      fallback: 'blocking',\n    }\n  }\n \n  // Call an external API endpoint to get posts\n  const res = await fetch('https://.../posts')\n  const posts = await res.json()\n \n  // Get the paths we want to prerender based on posts\n  // In production environments, prerender all pages\n  // (slower builds, but faster initial page load)\n  const paths = posts.map((post) => ({\n    params: { id: post.id },\n  }))\n \n  // { fallback: false } means other routes should 404\n  return { paths, fallback: false }\n}\n```\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "`getStaticPaths` allows you to control which pages are generated during the build instead of on-demand with [`fallback`](/docs/pages/api-reference/functions/get-static-paths#fallback-blocking). Generating more pages during a build will cause slower builds. You can defer generating all pages on-dema",
    "url": "https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-paths#generating-paths-on-demand-generating-paths-on-demand",
    "position": 7
  }
]