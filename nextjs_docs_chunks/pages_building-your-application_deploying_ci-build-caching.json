[
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Building Your Application](/docs/pages/building-your-application)[Deploying](/docs/pages/building-your-application/deploying)Continuous Integration (CI) Build Caching",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Building Your Application](/docs/pages/building-your-application)[Deploying](/docs/pages/building-your-application/deploying)Continuous Integration (CI) Build Caching",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#untitled-section",
    "position": 0
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "Continuous Integration (CI) Build Caching",
    "section_id": "continuous-integration-ci-build-caching",
    "heading_level": 1,
    "content": "# Continuous Integration (CI) Build Caching\n\nTo improve build performance, Next.js saves a cache to `.next/cache` that is shared between builds.\n\nTo take advantage of this cache in Continuous Integration (CI) environments, your CI workflow will need to be configured to correctly persist the cache between builds.\n\n> If your CI is not configured to persist `.next/cache` between builds, you may see a [No Cache Detected](/docs/messages/no-cache) error.\n\nHere are some example cache configurations for common CI providers:",
    "preview": "To improve build performance, Next.js saves a cache to `.next/cache` that is shared between builds. To take advantage of this cache in Continuous Integration (CI) environments, your CI workflow will need to be configured to correctly persist the cache between builds. > If your CI is not configured",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#continuous-integration-ci-build-caching",
    "position": 1
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Vercel](#vercel)",
    "section_id": "vercel-vercel",
    "heading_level": 2,
    "content": "## [Vercel](#vercel)\n\nNext.js caching is automatically configured for you. There's no action required on your part. If you are using Turborepo on Vercel, [learn more here](https://vercel.com/docs/monorepos/turborepo).",
    "preview": "Next.js caching is automatically configured for you. There's no action required on your part. If you are using Turborepo on Vercel, [learn more here](https://vercel.com/docs/monorepos/turborepo).",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#vercel-vercel",
    "position": 2
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[CircleCI](#circleci)",
    "section_id": "circleci-circleci",
    "heading_level": 2,
    "content": "## [CircleCI](#circleci)\n\nEdit your `save_cache` step in `.circleci/config.yml` to include `.next/cache`:\n\n```\nsteps:\n  - save_cache:\n      key: dependency-cache-{{ checksum \"yarn.lock\" }}\n      paths:\n        - ./node_modules\n        - ./.next/cache\n```\n\nIf you do not have a `save_cache` key, please follow CircleCI's [documentation on setting up build caching](https://circleci.com/docs/2.0/caching/).",
    "preview": "Edit your `save_cache` step in `.circleci/config.yml` to include `.next/cache`: [Code Block] If you do not have a `save_cache` key, please follow CircleCI's [documentation on setting up build caching](https://circleci.com/docs/2.0/caching/).",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#circleci-circleci",
    "position": 3
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Travis CI](#travis-ci)",
    "section_id": "travis-ci-travis-ci",
    "heading_level": 2,
    "content": "## [Travis CI](#travis-ci)\n\nAdd or merge the following into your `.travis.yml`:\n\n```\ncache:\n  directories:\n    - $HOME/.cache/yarn\n    - node_modules\n    - .next/cache\n```",
    "preview": "Add or merge the following into your `.travis.yml`: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#travis-ci-travis-ci",
    "position": 4
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[GitLab CI](#gitlab-ci)",
    "section_id": "gitlab-ci-gitlab-ci",
    "heading_level": 2,
    "content": "## [GitLab CI](#gitlab-ci)\n\nAdd or merge the following into your `.gitlab-ci.yml`:\n\n```\ncache:\n  key: ${CI_COMMIT_REF_SLUG}\n  paths:\n    - node_modules/\n    - .next/cache/\n```",
    "preview": "Add or merge the following into your `.gitlab-ci.yml`: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#gitlab-ci-gitlab-ci",
    "position": 5
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Netlify CI](#netlify-ci)",
    "section_id": "netlify-ci-netlify-ci",
    "heading_level": 2,
    "content": "## [Netlify CI](#netlify-ci)\n\nUse [Netlify Plugins](https://www.netlify.com/products/build/plugins/) with [`@netlify/plugin-nextjs`](https://www.npmjs.com/package/@netlify/plugin-nextjs).",
    "preview": "Use [Netlify Plugins](https://www.netlify.com/products/build/plugins/) with [`@netlify/plugin-nextjs`](https://www.npmjs.com/package/@netlify/plugin-nextjs).",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#netlify-ci-netlify-ci",
    "position": 6
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[AWS CodeBuild](#aws-codebuild)",
    "section_id": "aws-codebuild-aws-codebuild",
    "heading_level": 2,
    "content": "## [AWS CodeBuild](#aws-codebuild)\n\nAdd (or merge in) the following to your `buildspec.yml`:\n\n```\ncache:\n  paths:\n    - 'node_modules/**/*' # Cache `node_modules` for faster `yarn` or `npm i`\n    - '.next/cache/**/*' # Cache Next.js for faster application rebuilds\n```",
    "preview": "Add (or merge in) the following to your `buildspec.yml`: ``` cache: paths: - 'node_modules/**/*' # Cache `node_modules` for faster `yarn` or `npm i` - '.next/cache/**/*' # Cache Next.js for faster application rebuilds ```",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#aws-codebuild-aws-codebuild",
    "position": 7
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[GitHub Actions](#github-actions)",
    "section_id": "github-actions-github-actions",
    "heading_level": 2,
    "content": "## [GitHub Actions](#github-actions)\n\nUsing GitHub's [actions/cache](https://github.com/actions/cache), add the following step in your workflow file:\n\n```\nuses: actions/cache@v4\nwith:\n  # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching with actions/setup-node https://github.com/actions/setup-node\n  path: |\n    ~/.npm\n    ${{ github.workspace }}/.next/cache\n  # Generate a new cache whenever packages or source files change.\n  key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}\n  # If source files changed but packages didn't, rebuild from a prior cache.\n  restore-keys: |\n    ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-\n```",
    "preview": "Using GitHub's [actions/cache](https://github.com/actions/cache), add the following step in your workflow file: ``` uses: actions/cache@v4 with: # See here for caching with `yarn`, `bun` or other package managers https://github.com/actions/cache/blob/main/examples.md or you can leverage caching w",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#github-actions-github-actions",
    "position": 8
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Bitbucket Pipelines](#bitbucket-pipelines)",
    "section_id": "bitbucket-pipelines-bitbucket-pipelines",
    "heading_level": 2,
    "content": "## [Bitbucket Pipelines](#bitbucket-pipelines)\n\nAdd or merge the following into your `bitbucket-pipelines.yml` at the top level (same level as `pipelines`):\n\n```\ndefinitions:\n  caches:\n    nextcache: .next/cache\n```\n\nThen reference it in the `caches` section of your pipeline's `step`:\n\n```\n- step:\n    name: your_step_name\n    caches:\n      - node\n      - nextcache\n```",
    "preview": "Add or merge the following into your `bitbucket-pipelines.yml` at the top level (same level as `pipelines`): [Code Block] Then reference it in the `caches` section of your pipeline's `step`: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#bitbucket-pipelines-bitbucket-pipelines",
    "position": 9
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Heroku](#heroku)",
    "section_id": "heroku-heroku",
    "heading_level": 2,
    "content": "## [Heroku](#heroku)\n\nUsing Heroku's [custom cache](https://devcenter.heroku.com/articles/nodejs-support#custom-caching), add a `cacheDirectories` array in your top-level package.json:\n\n```\n\"cacheDirectories\": [\".next/cache\"]\n```",
    "preview": "Using Heroku's [custom cache](https://devcenter.heroku.com/articles/nodejs-support#custom-caching), add a `cacheDirectories` array in your top-level package.json: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#heroku-heroku",
    "position": 10
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Azure Pipelines](#azure-pipelines)",
    "section_id": "azure-pipelines-azure-pipelines",
    "heading_level": 2,
    "content": "## [Azure Pipelines](#azure-pipelines)\n\nUsing Azure Pipelines' [Cache task](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/cache), add the following task to your pipeline yaml file somewhere prior to the task that executes `next build`:\n\n```\n- task: Cache@2\n  displayName: 'Cache .next/cache'\n  inputs:\n    key: next | $(Agent.OS) | yarn.lock\n    path: '$(System.DefaultWorkingDirectory)/.next/cache'\n```",
    "preview": "Using Azure Pipelines' [Cache task](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/cache), add the following task to your pipeline yaml file somewhere prior to the task that executes `next build`: [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#azure-pipelines-azure-pipelines",
    "position": 11
  },
  {
    "title": "Continuous Integration (CI) Build Caching",
    "section": "[Jenkins (Pipeline)](#jenkins-pipeline)",
    "section_id": "jenkins-pipeline-jenkins-pipeline",
    "heading_level": 2,
    "content": "## [Jenkins (Pipeline)](#jenkins-pipeline)\n\nUsing Jenkins' [Job Cacher](https://www.jenkins.io/doc/pipeline/steps/jobcacher/) plugin, add the following build step to your `Jenkinsfile` where you would normally run `next build` or `npm install`:\n\n```\nstage(\"Restore npm packages\") {\n    steps {\n        // Writes lock-file to cache based on the GIT_COMMIT hash\n        writeFile file: \"next-lock.cache\", text: \"$GIT_COMMIT\"\n \n        cache(caches: [\n            arbitraryFileCache(\n                path: \"node_modules\",\n                includes: \"**/*\",\n                cacheValidityDecidingFile: \"package-lock.json\"\n            )\n        ]) {\n            sh \"npm install\"\n        }\n    }\n}\nstage(\"Build\") {\n    steps {\n        // Writes lock-file to cache based on the GIT_COMMIT hash\n        writeFile file: \"next-lock.cache\", text: \"$GIT_COMMIT\"\n \n        cache(caches: [\n            arbitraryFileCache(\n                path: \".next/cache\",\n                includes: \"**/*\",\n                cacheValidityDecidingFile: \"next-lock.cache\"\n            )\n        ]) {\n            // aka `next build`\n            sh \"npm run build\"\n        }\n    }\n}\n```\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "Using Jenkins' [Job Cacher](https://www.jenkins.io/doc/pipeline/steps/jobcacher/) plugin, add the following build step to your `Jenkinsfile` where you would normally run `next build` or `npm install`: ``` stage(\"Restore npm packages\") { steps { // Writes lock-file to cache based on the",
    "url": "https://nextjs.org/docs/pages/building-your-application/deploying/ci-build-caching#jenkins-pipeline-jenkins-pipeline",
    "position": 12
  }
]