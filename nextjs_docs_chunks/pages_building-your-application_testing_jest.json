[
  {
    "title": "Setting up Jest with Next.js",
    "section": "Untitled Section",
    "section_id": "untitled-section",
    "heading_level": 3,
    "content": "Menu\n\nUsing App Router\n\nFeatures available in /app\n\nUsing Latest Version\n\n15.2.4\n\n[Building Your Application](/docs/pages/building-your-application)[Testing](/docs/pages/building-your-application/testing)Jest",
    "preview": "Menu Using App Router Features available in /app Using Latest Version 15.2.4 [Building Your Application](/docs/pages/building-your-application)[Testing](/docs/pages/building-your-application/testing)Jest",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#untitled-section",
    "position": 0
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "Setting up Jest with Next.js",
    "section_id": "setting-up-jest-with-next-js",
    "heading_level": 1,
    "content": "# Setting up Jest with Next.js\n\nJest and React Testing Library are frequently used together for **Unit Testing** and **Snapshot Testing**. This guide will show you how to set up Jest with Next.js and write your first tests.\n\n> **Good to know:** Since `async` Server Components are new to the React ecosystem, Jest currently does not support them. While you can still run **unit tests** for synchronous Server and Client Components, we recommend using an **E2E tests** for `async` components.",
    "preview": "Jest and React Testing Library are frequently used together for **Unit Testing** and **Snapshot Testing**. This guide will show you how to set up Jest with Next.js and write your first tests. > **Good to know:** Since `async` Server Components are new to the React ecosystem, Jest currently does not",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#setting-up-jest-with-next-js",
    "position": 1
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Quickstart](#quickstart)",
    "section_id": "quickstart-quickstart",
    "heading_level": 2,
    "content": "## [Quickstart](#quickstart)\n\nYou can use `create-next-app` with the Next.js [with-jest](https://github.com/vercel/next.js/tree/canary/examples/with-jest) example to quickly get started:\n\nTerminal\n\n```\nnpx create-next-app@latest --example with-jest with-jest-app\n```",
    "preview": "You can use `create-next-app` with the Next.js [with-jest](https://github.com/vercel/next.js/tree/canary/examples/with-jest) example to quickly get started: Terminal [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#quickstart-quickstart",
    "position": 2
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Manual setup](#manual-setup)",
    "section_id": "manual-setup-manual-setup",
    "heading_level": 2,
    "content": "## [Manual setup](#manual-setup)\n\nSince the release of [Next.js 12](https://nextjs.org/blog/next-12), Next.js now has built-in configuration for Jest.\n\nTo set up Jest, install `jest` and the following packages as dev dependencies:\n\nTerminal\n\n```\nnpm install -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @testing-library/jest-dom ts-node",
    "preview": "Since the release of [Next.js 12](https://nextjs.org/blog/next-12), Next.js now has built-in configuration for Jest. To set up Jest, install `jest` and the following packages as dev dependencies: Terminal ``` npm install -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#manual-setup-manual-setup",
    "position": 3
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nyarn add -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @testing-library/jest-dom ts-node",
    "preview": "yarn add -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @testing-library/jest-dom ts-node",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 4
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\npnpm install -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @testing-library/jest-dom ts-node\n```\n\nGenerate a basic Jest configuration file by running the following command:\n\nTerminal\n\n```\nnpm init jest@latest",
    "preview": "pnpm install -D jest jest-environment-jsdom @testing-library/react @testing-library/dom @testing-library/jest-dom ts-node [Code Block] npm init jest@latest",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 5
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nyarn create jest@latest",
    "preview": "yarn create jest@latest",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 6
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\npnpm create jest@latest\n```\n\nThis will take you through a series of prompts to setup Jest for your project, including automatically creating a `jest.config.ts|js` file.\n\nUpdate your config file to use `next/jest`. This transformer has all the necessary configuration options for Jest to work with Next.js:\n\njest.config.ts\n\nTypeScript\n\nJavaScriptTypeScript\n\n```\nimport type { Config } from 'jest'\nimport nextJest from 'next/jest.js'\n \nconst createJestConfig = nextJest({\n  // Provide the path to your Next.js app to load next.config.js and .env files in your test environment\n  dir: './',\n})\n \n// Add any custom config to be passed to Jest\nconst config: Config = {\n  coverageProvider: 'v8',\n  testEnvironment: 'jsdom',\n  // Add more setup options before each test is run\n  // setupFilesAfterEnv: ['<rootDir>/jest.setup.ts'],\n}\n \n// createJestConfig is exported this way to ensure that next/jest can load the Next.js config which is async\nexport default createJestConfig(config)\n```\n\nUnder the hood, `next/jest` is automatically configuring Jest for you, including:\n\n* Setting up `transform` using the [Next.js Compiler](/docs/architecture/nextjs-compiler).\n* Auto mocking stylesheets (`.css`, `.module.css`, and their scss variants), image imports and [`next/font`](/docs/app/building-your-application/optimizing/fonts).\n* Loading `.env` (and all variants) into `process.env`.\n* Ignoring `node_modules` from test resolving and transforms.\n* Ignoring `.next` from test resolving.\n* Loading `next.config.js` for flags that enable SWC transforms.\n\n> **Good to know**: To test environment variables directly, load them manually in a separate setup script or in your `jest.config.ts` file. For more information, please see [Test Environment Variables](/docs/app/building-your-application/configuring/environment-variables#test-environment-variables).",
    "preview": "pnpm create jest@latest ``` This will take you through a series of prompts to setup Jest for your project, including automatically creating a `jest.config.ts|js` file. Update your config file to use `next/jest`. This transformer has all the necessary configuration options for Jest to work with Nex",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 7
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Setting up Jest (with Babel)](#setting-up-jest-with-babel)",
    "section_id": "setting-up-jest-with-babel-setting-up-jest-with-babel",
    "heading_level": 2,
    "content": "## [Setting up Jest (with Babel)](#setting-up-jest-with-babel)\n\nIf you opt out of the [Next.js Compiler](/docs/architecture/nextjs-compiler) and use Babel instead, you will need to manually configure Jest and install `babel-jest` and `identity-obj-proxy` in addition to the packages above.\n\nHere are the recommended options to configure Jest for Next.js:\n\njest.config.js\n\n```\nmodule.exports = {\n  collectCoverage: true,\n  // on node 14.x coverage provider v8 offers good speed and more or less good report\n  coverageProvider: 'v8',\n  collectCoverageFrom: [\n    '**/*.{js,jsx,ts,tsx}',\n    '!**/*.d.ts',\n    '!**/node_modules/**',\n    '!<rootDir>/out/**',\n    '!<rootDir>/.next/**',\n    '!<rootDir>/*.config.js',\n    '!<rootDir>/coverage/**',\n  ],\n  moduleNameMapper: {\n    // Handle CSS imports (with CSS modules)\n    // https://jestjs.io/docs/webpack#mocking-css-modules\n    '^.+\\\\.module\\\\.(css|sass|scss)$': 'identity-obj-proxy',\n \n    // Handle CSS imports (without CSS modules)\n    '^.+\\\\.(css|sass|scss)$': '<rootDir>/__mocks__/styleMock.js',\n \n    // Handle image imports\n    // https://jestjs.io/docs/webpack#handling-static-assets\n    '^.+\\\\.(png|jpg|jpeg|gif|webp|avif|ico|bmp|svg)$': `<rootDir>/__mocks__/fileMock.js`,\n \n    // Handle module aliases\n    '^@/components/(.*)$': '<rootDir>/components/$1',\n \n    // Handle @next/font\n    '@next/font/(.*)': `<rootDir>/__mocks__/nextFontMock.js`,\n    // Handle next/font\n    'next/font/(.*)': `<rootDir>/__mocks__/nextFontMock.js`,\n    // Disable server-only\n    'server-only': `<rootDir>/__mocks__/empty.js`,\n  },\n  // Add more setup options before each test is run\n  // setupFilesAfterEnv: ['<rootDir>/jest.setup.js'],\n  testPathIgnorePatterns: ['<rootDir>/node_modules/', '<rootDir>/.next/'],\n  testEnvironment: 'jsdom',\n  transform: {\n    // Use babel-jest to transpile tests with the next/babel preset\n    // https://jestjs.io/docs/configuration#transform-objectstring-pathtotransformer--pathtotransformer-object\n    '^.+\\\\.(js|jsx|ts|tsx)$': ['babel-jest', { presets: ['next/babel'] }],\n  },\n  transformIgnorePatterns: [\n    '/node_modules/',\n    '^.+\\\\.module\\\\.(css|sass|scss)$',\n  ],\n}\n```\n\nYou can learn more about each configuration option in the [Jest docs](https://jestjs.io/docs/configuration). We also recommend reviewing [`next/jest` configuration](https://github.com/vercel/next.js/blob/e02fe314dcd0ae614c65b505c6daafbdeebb920e/packages/next/src/build/jest/jest.ts) to see how Next.js configures Jest.",
    "preview": "If you opt out of the [Next.js Compiler](/docs/architecture/nextjs-compiler) and use Babel instead, you will need to manually configure Jest and install `babel-jest` and `identity-obj-proxy` in addition to the packages above. Here are the recommended options to configure Jest for Next.js: jest.con",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#setting-up-jest-with-babel-setting-up-jest-with-babel",
    "position": 8
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Handling stylesheets and image imports](#handling-stylesheets-and-image-imports)",
    "section_id": "handling-stylesheets-and-image-imports-handling-stylesheets-and-image-imports",
    "heading_level": 3,
    "content": "### [Handling stylesheets and image imports](#handling-stylesheets-and-image-imports)\n\nStylesheets and images aren't used in the tests but importing them may cause errors, so they will need to be mocked.\n\nCreate the mock files referenced in the configuration above - `fileMock.js` and `styleMock.js` - inside a `__mocks__` directory:\n\n\\_\\_mocks\\_\\_/fileMock.js\n\n```\nmodule.exports = 'test-file-stub'\n```\n\n\\_\\_mocks\\_\\_/styleMock.js\n\n```\nmodule.exports = {}\n```\n\nFor more information on handling static assets, please refer to the [Jest Docs](https://jestjs.io/docs/webpack#handling-static-assets).",
    "preview": "Stylesheets and images aren't used in the tests but importing them may cause errors, so they will need to be mocked. Create the mock files referenced in the configuration above - `fileMock.js` and `styleMock.js` - inside a `__mocks__` directory: \\_\\_mocks\\_\\_/fileMock.js [Code Block] \\_\\_mocks\\_",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#handling-stylesheets-and-image-imports-handling-stylesheets-and-image-imports",
    "position": 9
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Handling Fonts](#handling-fonts)",
    "section_id": "handling-fonts-handling-fonts",
    "heading_level": 2,
    "content": "## [Handling Fonts](#handling-fonts)\n\nTo handle fonts, create the `nextFontMock.js` file inside the `__mocks__` directory, and add the following configuration:\n\n\\_\\_mocks\\_\\_/nextFontMock.js\n\n```\nmodule.exports = new Proxy(\n  {},\n  {\n    get: function getter() {\n      return () => ({\n        className: 'className',\n        variable: 'variable',\n        style: { fontFamily: 'fontFamily' },\n      })\n    },\n  }\n)\n```",
    "preview": "To handle fonts, create the `nextFontMock.js` file inside the `__mocks__` directory, and add the following configuration: \\_\\_mocks\\_\\_/nextFontMock.js [Code Block]",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#handling-fonts-handling-fonts",
    "position": 10
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Optional: Handling Absolute Imports and Module Path Aliases](#optional-handling-absolute-imports-and-module-path-aliases)",
    "section_id": "optional-handling-absolute-imports-and-module-path-aliases-optional-handling-absolute-imports-and-module-path-aliases",
    "heading_level": 2,
    "content": "## [Optional: Handling Absolute Imports and Module Path Aliases](#optional-handling-absolute-imports-and-module-path-aliases)\n\nIf your project is using [Module Path Aliases](/docs/app/getting-started/installation#set-up-absolute-imports-and-module-path-aliases), you will need to configure Jest to resolve the imports by matching the paths option in the `jsconfig.json` file with the `moduleNameMapper` option in the `jest.config.js` file. For example:\n\ntsconfig.json or jsconfig.json\n\n```\n{\n  \"compilerOptions\": {\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"baseUrl\": \"./\",\n    \"paths\": {\n      \"@/components/*\": [\"components/*\"]\n    }\n  }\n}\n```\n\njest.config.js\n\n```\nmoduleNameMapper: {\n  // ...\n  '^@/components/(.*)$': '<rootDir>/components/$1',\n}\n```",
    "preview": "If your project is using [Module Path Aliases](/docs/app/getting-started/installation#set-up-absolute-imports-and-module-path-aliases), you will need to configure Jest to resolve the imports by matching the paths option in the `jsconfig.json` file with the `moduleNameMapper` option in the `jest.conf",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#optional-handling-absolute-imports-and-module-path-aliases-optional-handling-absolute-imports-and-module-path-aliases",
    "position": 11
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Optional: Extend Jest with custom matchers](#optional-extend-jest-with-custom-matchers)",
    "section_id": "optional-extend-jest-with-custom-matchers-optional-extend-jest-with-custom-matchers",
    "heading_level": 2,
    "content": "## [Optional: Extend Jest with custom matchers](#optional-extend-jest-with-custom-matchers)\n\n`@testing-library/jest-dom` includes a set of convenient [custom matchers](https://github.com/testing-library/jest-dom#custom-matchers) such as `.toBeInTheDocument()` making it easier to write tests. You can import the custom matchers for every test by adding the following option to the Jest configuration file:\n\njest.config.ts\n\nTypeScript\n\nJavaScriptTypeScript\n\n```\nsetupFilesAfterEnv: ['<rootDir>/jest.setup.ts']\n```\n\nThen, inside `jest.setup`, add the following import:\n\njest.setup.ts\n\nTypeScript\n\nJavaScriptTypeScript\n\n```\nimport '@testing-library/jest-dom'\n```\n\n> **Good to know:** [`extend-expect` was removed in `v6.0`](https://github.com/testing-library/jest-dom/releases/tag/v6.0.0), so if you are using `@testing-library/jest-dom` before version 6, you will need to import `@testing-library/jest-dom/extend-expect` instead.\n\nIf you need to add more setup options before each test, you can add them to the `jest.setup` file above.",
    "preview": "`@testing-library/jest-dom` includes a set of convenient [custom matchers](https://github.com/testing-library/jest-dom#custom-matchers) such as `.toBeInTheDocument()` making it easier to write tests. You can import the custom matchers for every test by adding the following option to the Jest configu",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#optional-extend-jest-with-custom-matchers-optional-extend-jest-with-custom-matchers",
    "position": 12
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Add a test script to `package.json`](#add-a-test-script-to-packagejson)",
    "section_id": "add-a-test-script-to-package-json-add-a-test-script-to-packagejson",
    "heading_level": 2,
    "content": "## [Add a test script to `package.json`](#add-a-test-script-to-packagejson)\n\nFinally, add a Jest `test` script to your `package.json` file:\n\npackage.json\n\n```\n{\n  \"scripts\": {\n    \"dev\": \"next dev\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"test\": \"jest\",\n    \"test:watch\": \"jest --watch\"\n  }\n}\n```\n\n`jest --watch` will re-run tests when a file is changed. For more Jest CLI options, please refer to the [Jest Docs](https://jestjs.io/docs/cli#reference).",
    "preview": "Finally, add a Jest `test` script to your `package.json` file: package.json [Code Block] `jest --watch` will re-run tests when a file is changed. For more Jest CLI options, please refer to the [Jest Docs](https://jestjs.io/docs/cli#reference).",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#add-a-test-script-to-package-json-add-a-test-script-to-packagejson",
    "position": 13
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Creating your first test](#creating-your-first-test)",
    "section_id": "creating-your-first-test-creating-your-first-test",
    "heading_level": 3,
    "content": "### [Creating your first test](#creating-your-first-test)\n\nYour project is now ready to run tests. Create a folder called `__tests__` in your project's root directory.\n\nFor example, we can add a test to check if the `<Home />` component successfully renders a heading:\n\n```\nexport default function Home() {\n  return <h1>Home</h1>\n}\n```\n\n\\_\\_tests\\_\\_/index.test.js\n\n```\nimport '@testing-library/jest-dom'\nimport { render, screen } from '@testing-library/react'\nimport Home from '../pages/index'\n \ndescribe('Home', () => {\n  it('renders a heading', () => {\n    render(<Home />)\n \n    const heading = screen.getByRole('heading', { level: 1 })\n \n    expect(heading).toBeInTheDocument()\n  })\n})\n```\n\nOptionally, add a [snapshot test](https://jestjs.io/docs/snapshot-testing) to keep track of any unexpected changes in your component:\n\n\\_\\_tests\\_\\_/snapshot.js\n\n```\nimport { render } from '@testing-library/react'\nimport Home from '../pages/index'\n \nit('renders homepage unchanged', () => {\n  const { container } = render(<Home />)\n  expect(container).toMatchSnapshot()\n})\n```\n\n> **Good to know**: Test files should not be included inside the Pages Router because any files inside the Pages Router are considered routes.",
    "preview": "Your project is now ready to run tests. Create a folder called `__tests__` in your project's root directory. For example, we can add a test to check if the `<Home />` component successfully renders a heading: [Code Block] \\_\\_tests\\_\\_/index.test.js [Code Block] Optionally, add a [snapshot test",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#creating-your-first-test-creating-your-first-test",
    "position": 14
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Running your tests](#running-your-tests)",
    "section_id": "running-your-tests-running-your-tests",
    "heading_level": 2,
    "content": "## [Running your tests](#running-your-tests)\n\nThen, run the following command to run your tests:\n\nTerminal\n\n```\nnpm run test",
    "preview": "Then, run the following command to run your tests: Terminal ``` npm run test",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#running-your-tests-running-your-tests",
    "position": 15
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\nyarn test",
    "preview": "yarn test",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 16
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "or",
    "section_id": "or",
    "heading_level": 1,
    "content": "# or\npnpm test\n```",
    "preview": "pnpm test ```",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#or",
    "position": 17
  },
  {
    "title": "Setting up Jest with Next.js",
    "section": "[Additional Resources](#additional-resources)",
    "section_id": "additional-resources-additional-resources",
    "heading_level": 2,
    "content": "## [Additional Resources](#additional-resources)\n\nFor further reading, you may find these resources helpful:\n\n* [Next.js with Jest example](https://github.com/vercel/next.js/tree/canary/examples/with-jest)\n* [Jest Docs](https://jestjs.io/docs/getting-started)\n* [React Testing Library Docs](https://testing-library.com/docs/react-testing-library/intro/)\n* [Testing Playground](https://testing-playground.com/) - use good testing practices to match elements.\n\nWas this helpful?\n\nsupported.\n\nSend",
    "preview": "For further reading, you may find these resources helpful: * [Next.js with Jest example](https://github.com/vercel/next.js/tree/canary/examples/with-jest) * [Jest Docs](https://jestjs.io/docs/getting-started) * [React Testing Library Docs](https://testing-library.com/docs/react-testing-library/intr",
    "url": "https://nextjs.org/docs/pages/building-your-application/testing/jest#additional-resources-additional-resources",
    "position": 18
  }
]